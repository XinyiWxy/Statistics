Python simulation to demonstrate the coefficient of determination 
R^2 and R^2 in action — using both a correlated and uncorrelated case.

Note for simple linear regression, R^2 = corr(x,y)^2

1. 
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score

np.random.seed(42)
n = 100

# 1. Case 1: Strongly correlated data
x1 = np.random.normal(0, 1, n)
y1 = 3 * x1 + np.random.normal(0, 1, n)

# 2. Case 2: No correlation
x2 = np.random.normal(0, 1, n)
y2 = np.random.normal(0, 1, n)  # independent of x2

def compute_r2(x, y):
    x = x.reshape(-1, 1)  # sklearn expects 2D input
    model = LinearRegression()
    model.fit(x, y)
    y_pred = model.predict(x)
    r2 = r2_score(y, y_pred)
    return r2

r2_case1 = compute_r2(x1, y1)
r2_case2 = compute_r2(x2, y2)

print(f"R² with strong correlation: {r2_case1:.3f}")
print(f"R² with no correlation:     {r2_case2:.3f}")



